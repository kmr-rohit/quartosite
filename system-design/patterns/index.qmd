---
title: "Design Patterns"
order: 1
---

# System Design Patterns

Common patterns and architectural approaches used in large-scale system design.

## Load Balancing Patterns

- [Round Robin](round-robin.qmd) - Simple load balancing strategy
- [Least Connections](least-connections.qmd) - Connection-based load balancing
- [Consistent Hashing](consistent-hashing.qmd) - Distributed hash table approach

## Caching Patterns

- [Cache-Aside](cache-aside.qmd) - Application-managed caching
- [Write-Through](write-through.qmd) - Synchronous cache updates
- [Write-Behind](write-behind.qmd) - Asynchronous cache updates

## Database Patterns

- [Database Sharding](database-sharding.qmd) - Horizontal partitioning
- [Read Replicas](read-replicas.qmd) - Scaling read operations
- [Master-Slave Replication](master-slave.qmd) - Data replication strategy

## Microservices Patterns

- [API Gateway](api-gateway.qmd) - Single entry point for clients
- [Service Discovery](service-discovery.qmd) - Dynamic service location
- [Circuit Breaker](circuit-breaker.qmd) - Fault tolerance pattern

## Message Queue Patterns

- [Publisher-Subscriber](pub-sub.qmd) - Asynchronous messaging
- [Message Queue](message-queue.qmd) - Reliable message delivery
- [Event Sourcing](event-sourcing.qmd) - Event-driven architecture

## Security Patterns

- [OAuth 2.0](oauth2.qmd) - Authorization framework
- [JWT Tokens](jwt-tokens.qmd) - Stateless authentication
- [Rate Limiting](rate-limiting.qmd) - API protection

## Monitoring Patterns

- [Health Checks](health-checks.qmd) - Service availability monitoring
- [Distributed Tracing](distributed-tracing.qmd) - Request flow tracking
- [Metrics Collection](metrics-collection.qmd) - Performance monitoring 